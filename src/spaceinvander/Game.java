/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spaceinvander;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;

/**
 *
 * @author Godievski
 */
public class Game extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    protected Nave nave;
    private int keyPressed;
    private boolean disparando;
    protected final GestorEnemigos enemigos;
    private final ControlarColisiones controladorColisiones;
    protected static int score;
    private final static int SLEEP_TIME = 10;
    protected final static int WINDOW_WIDTH = 400;
    protected final static int WINDOW_HEIGHT = 600;
    private final PanelDibujo panelDibujo;
    
    
    /**
     *
     * @param graphicConf
     */
    public Game() {
        this.setIgnoreRepaint(true);
        initComponents();
        this.setBounds(500, 100, Game.WINDOW_WIDTH, Game.WINDOW_HEIGHT);
        this.setResizable(false);
        this.createBufferStrategy(2);
        this.setVisible(true);
        this.setTitle("SpaceInvader by Godievski");

        //PANEL
        this.panelDibujo = new PanelDibujo(this, new Dimension(WINDOW_WIDTH,WINDOW_HEIGHT));
        this.setContentPane(this.panelDibujo);
        this.panelDibujo.setLayout(null);
        this.panelDibujo.setDoubleBuffered(true);

        //OBJETOS DEL JUEGO
        nave = new Nave();
        this.enemigos = new GestorEnemigos();
        this.controladorColisiones = new ControlarColisiones(this.nave,this.enemigos);
        this.keyPressed = 0;
        Game.score = 0;
    }

    public void play(){
        this.enemigos.start();
        this.controladorColisiones.start();
        while (true){
            try {
                nave.mover(this.keyPressed);
                repaint();
                sleep(SLEEP_TIME);
            } catch (InterruptedException ex) {
                Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
   
    
    @Override
    public void paint (Graphics g){
        this.panelDibujo.paint(g);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        
        if (code == KeyEvent.VK_LEFT || code == KeyEvent.VK_RIGHT)
            this.keyPressed = code;
        
            
        if (code == KeyEvent.VK_SPACE)
            nave.disparar();            
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
